/*
 * sieve.aikido
 *
 * Aikido Language System,
 * export version: 1.00
 * Copyright (c) 2002 Sun Microsystems, Inc.
 *
 * Sun Public License Notice
 * 
 * The contents of this file are subject to the Sun Public License Version 1.0 (the "License"). You
 * may not use this file except in compliance with the License. A copy of the License is available
 * at http://www.opensource.org/licenses/sunpublic.php
 * 
 * The Original Code is Aikido. 
 * The Initial Developer of the Original Code is David Allison on behalf of Sun Microsystems, Inc. 
 * Copyright (C) Sun Microsystems, Inc. 2000-2003. All Rights Reserved.
 * 
 * 
 * Contributor(s): dallison
 *
 * Version:  1.6
 * Created by dallison on 4/19/2002
 * Last modified by dallison on 03/07/29
 */

const LOOP = 100 // 1000
const size = 8190
               
var flags = new int [size+1] ;

var primes = 0 ;
var prime = 0
var count = 0
var iter = 0
var i = 0

System.println ("BYTE Sieve Benchmark") ;
System.println ("for " + LOOP + " iterations") ;

native clock() ;
//var start = System.time()
var start = clock()

for (iter = 0;iter <= LOOP;iter++)
  {
  primes = 0 ;
  for (i = 0;i <= size;++i)
    flags [i] = true ;
  //System.fill (flags, 1, 0, sizeof (flags))
  for (i = 0;i <= size;++i)
    {
    if (flags [i])
      {
      prime = i + i + 3 ;
/*printf ("%d is prime", prime) ;
printf ("        i = %d\n", i) ;*/
      for (count = i;count <= size;count += prime)
        flags [count] = false ;
      primes++ ;
      }
    }
  }

System.println ("\n" + primes + " primes found") ;
//var end = System.time()
var end = clock()
var us = cast<real>(end - start) / System.clocksPerSec
System.println (us + " seconds")
