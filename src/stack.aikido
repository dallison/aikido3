/*
 * stack.aikido
 *
 * Aikido Language System,
 * export version: 1.00
 * Copyright (c) 2002-2003 Sun Microsystems, Inc.
 *
 * Sun Public License Notice
 * 
 * The contents of this file are subject to the Sun Public License Version 1.0 (the "License"). You
 * may not use this file except in compliance with the License. A copy of the License is available
 * at http://www.opensource.org/licenses/sunpublic.php
 * 
 * The Original Code is Aikido. 
 * The Initial Developer of the Original Code is David Allison on behalf of Sun Microsystems, Inc. 
 * Copyright (C) Sun Microsystems, Inc. 2000-2003. All Rights Reserved.
 * 
 * 
 * Contributor(s): dallison
 *
 * Version:  1.7
 * Created by dallison on 4/19/2002
 * Last modified by dallison on 03/07/29
 */

import list

// 
// a stack
//

monitor Stack extends List {
public:

    // push a value on to the top of the stack
    function push (v) {
        insertEnd (v)
    }

    // retrieve the value at the top of the stack
    function top() {
        if (lastitem == null) {
            throw "Stack is empty"
        }
        return lastitem.value
    }

    // pop a value off the stack
    function pop() {
        if (lastitem != null) {
            erase (lastitem)
        } else {
            throw "Stack is empty"
        }
    }   


    // size of the stack
    public operator sizeof() {
        return nitems
    }

    // membership testing
    public operator in (v) {
        return find (v) != null
    }

// iterator
    public operator foreach (var i) {
        if (typeof (i) == "none") {
            i = items
            return i.value
        } elif (i == lastitem) {
            i = none
        } else {
            i = i.next
            return i.value
        }

    }

}
