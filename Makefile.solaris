include Makefile.common


OSDEFINES = -D_OS_SOLARIS -D_CC_SUN

SUPPORTLIBS = lib/libaikidonetwork.so lib/libaikidomath.so lib/libaikidosecurity.so 

ARCH = -xarch=v8plus
PREFETCH = -xprefetch=yes

LDLIBS += $(LIB) -lthread -ldl -lposix4
CCFLAGS += -Isrc/pcre $(OSDEFINES) $(DEBUG) -mt $(ARCH) $(PREFETCH)
CFLAGS += -Isrc/pcre $(OSDEFINES) $(DEBUG) -mt $(ARCH) $(PREFETCH)
LDFLAGS += -L.


driver: driver.o
	$(CCC) -o $(DRIVER) driver.o -mt $(ARCH)


build:	xdebug .WAIT midclean .WAIT xopt

xdebug:
	$(MAKE) -f Makefile.solaris DEBUG="-g -DDEBUGON" LIB=$(GLIB) BIN=$(GBIN) $(GBIN)

xopt:
	$(MAKE) -f Makefile.solaris DEBUG=-fast LIB=$(OLIB) BIN=$(OBIN) $(OBIN)

xgtk:
	-$(MAKE) -f Makefile.solaris DEBUG=-fast gtk

$(LIB) : $(OBJS)
	$(CCC)	-xar -o $(LIB) $(OBJS)

$(BIN): $(LIB) $(EOBJS) $(SUPPORTLIBS) $(ZIPFILE)
	#purify $(LINK.cc) -o $(BIN) $(PROFILE) $(EOBJS) $(LDLIBS)
	$(LINK.cc) -o $(BIN) $(PROFILE) $(EOBJS) $(LDLIBS)


$(ZIPFILE):
	cd src ; $(ZIPCMD)   ../$(ZIPFILE) $(ZIPFILES)
	cd src/gtk ; $(ZIPCMD)   ../../$(ZIPFILE) $(GTKFILES)


bin/mkelf: src/mkelf.cc
	$(CCC) -o bin/mkelf src/mkelf.cc -lstdc++
                                                                                                                                                 


lib/libaikidonetwork.so : network.o
	$(CCC) -G -o lib/libaikidonetwork.so network.o -lsocket -lnsl

network.o : src/network.cc
	$(CCC) $(CCFLAGS) -Isrc -o network.o -c src/network.cc

lib/libaikidomath.so : math.o
	$(CCC) -G -o lib/libaikidomath.so math.o

math.o : src/math.cc
	$(CCC) $(CCFLAGS) -Isrc -o math.o -c src/math.cc

lib/libaikidosecurity.so : security.o
	$(CCC) -G -o lib/libaikidosecurity.so security.o -lcrypt

security.o : src/security.cc
	$(CCC) $(CCFLAGS) -Isrc -o security.o -c src/security.cc

#
# GTK+ support.  
#

gtk: lib/libdtk.so lib/libddk.so

lib/libdtk.so : dtk.o
	$(CCC) -G -o lib/libdtk.so dtk.o

dtk.o : src/gtk/dtk.cc
	$(CCC) $(CCFLAGS) -Isrc $(GTKINC) $(GLIBINC) -o dtk.o -c src/gtk/dtk.cc

ddk.o : src/gtk/ddk.cc
	$(CCC) $(CCFLAGS) -Isrc $(GTKINC) $(GLIBINC) -o ddk.o -c src/gtk/ddk.cc


lib/libddk.so : ddk.o
	$(CCC) -G -o lib/libddk.so ddk.o


clean:
	rm -f *.o $(LIB) $(BIN) $(ZIPFILE) $(SUPPORTLIBS)
	CCadmin -clean



#
# clean for swap from debug to optimize build
#

midclean: 
	rm -f $(OBJS)
	CCadmin -clean

