include Makefile.common

distro = $(shell /bin/sh getdistro)
buildno =$(shell /bin/sh newbuild)
release = $(shell /bin/sh cat release)
arch = $(shell uname -i)
version = $(shell /bin/sh getversion)

MSUFFIX = linux
CC = $(CCCMD) $(OSDEFINES)
#CXX = $(CC)

MAKEFILE = Makefile.$(MSUFFIX)

GPROF= #-pg

# use make BITS=-m32 to build 32 bit

OSDEFINES = -D_OS_LINUX -D_CC_GCC $(BITS) $(INSTALLDIR)

SUPPORTLIBS = lib/libaikidonetwork.so lib/libaikidomath.so  \
              lib/libaikidonetwork.a lib/libaikidomath.a 

LDLIBS += -rdynamic $(LIB) -lpthread -ldl -lstdc++ -lm
CPPFLAGS += -Isrc -Isrc/pcre $(OSDEFINES) $(DEBUG)
CPPFLAGS += -Isrc -Isrc/pcre $(OSDEFINES) $(DEBUG) $(GPROF) -fPIC
LDFLAGS += -L. 

build: xdebug xgtk midclean xopt 

xdebug:
	$(MAKE) -f $(MAKEFILE) DEBUG="-g -DDEBUGON" LIB=$(GLIB) BIN=$(GBIN) STATICLIB=$(GSTATICLIB) $(GBIN)

xopt:
	$(MAKE) -f $(MAKEFILE) DEBUG=-O3 LIB=$(OLIB) BIN=$(OBIN) STATICLIB=$(OSTATICLIB) $(OBIN)

xgtk:
	-$(MAKE) -f $(MAKEFILE) DEBUG="-g -w" gtk


driver: driver.o
	$(CC) -o $(DRIVER) driver.o -lstdc++

//OBJS += network.o math.o 

$(LIB) : $(OBJS)
	ar ruv $(LIB) $(OBJS)
	gcc $(BITS) -Wl,-r -nostdlib -o $(STATICLIB) $(OBJS)


$(BIN): $(LIB) $(EOBJS) $(SUPPORTLIBS) $(ZIPFILE)
	$(LINK.cc) -o $(BIN) $(PROFILE) $(EOBJS) $(LDLIBS) $(GPROF)


$(ZIPFILE):
	cd src ; $(ZIPCMD)  ../$(ZIPFILE) $(ZIPFILES)
	cd src/gtk ; $(ZIPCMD) ../../$(ZIPFILE) $(GTKFILES)
	xxd -i $(ZIPFILE) > src/aikido_zip.c


bin/mkelf: src/mkelf.cc
	$(CC) -o bin/mkelf src/mkelf.cc -lstdc++



lib/libaikidonetwork.so : network.o
	$(CC) -shared -o lib/libaikidonetwork.so network.o  -lnsl -lstdc++

lib/libaikidonetwork.a: network.o
	$(AR) ruv lib/libaikidonetwork.a network.o

network.o : src/network.cc
	$(CC) $(CPPFLAGS) -Isrc -o network.o -c src/network.cc -fPIC

lib/libaikidomath.so : math.o
	$(CC) -shared -o lib/libaikidomath.so math.o -lstdc++

lib/libaikidomath.a : math.o
	$(AR) ruv lib/libaikidomath.a math.o

math.o : src/math.cc
	$(CC) $(CPPFLAGS) -Isrc -o math.o -c src/math.cc -fPIC

lib/libaikidosecurity.so : security.o
	$(CC) -shared -o lib/libaikidosecurity.so security.o -lcrypt -lstdc++

lib/libaikidosecurity.a : security.o
	$(AR) ruv lib/libaikidosecurity.a security.o

security.o : src/security.cc
	$(CC) $(CPPFLAGS) -Isrc -o security.o -c src/security.cc -fPIC





#
# GTK+ support
#

gtk: lib/libdtk.so lib/libddk.so

lib/libdtk.so : dtk.o
	$(CC) -shared -o lib/libdtk.so dtk.o -lstdc++

dtk.o : src/gtk/dtk.cc
	$(CC) $(CPPFLAGS) -Isrc $(GTKINC) $(GLIBINC) -w -o dtk.o -c src/gtk/dtk.cc -fPIC

ddk.o : src/gtk/ddk.cc
	$(CC) $(CPPFLAGS) -Isrc $(GTKINC) $(GLIBINC) -w -o ddk.o -c src/gtk/ddk.cc -fPIC


lib/libddk.so : ddk.o
	$(CC) -shared -o lib/libddk.so ddk.o -lstdc++


.PHONY: aikido.spec

aikido.spec: aikido.spec.in
	sed -e 's!%%root%%!$(PWD)!g' -e 's!%%distro%%!$(distro)!g' \
		-e 's!%%build%%!$(buildno)!g' \
		-e 's!%%arch%%!$(arch)!g' \
		-e 's!%%version%%!$(version)!g' $< >$@

rpmbuild := $(shell which rpmbuild 2>/dev/null || which rpm)

rpm: aikido.spec
	$(rpmbuild) -bb $<

qrpm: aikido.spec
	$(rpmbuild) -bb --define 'no_build 1' $<

clean:
	rm -f *.o $(GLIB) $(GBIN) $(OLIB) $(OBIN) $(ZIPFILE) $(SUPPORTLIBS)

#
# clean for swap from debug to optimize build
#

midclean: 
	rm -f *.o 

.WAIT:


